//----------------------------------------------------------------------
// @Author  : Jun Xuan (idxuan@hotmail.com)
// @Link    : http://idxuan.github.io
// @Date    : 2014-05-30
// @Version : 0.0.3
// @Desc    : My Sublime Text 3 Settings
//----------------------------------------------------------------------

{
    //------------------------------------------------------------------
    // Theme
    //------------------------------------------------------------------
    // Need to plug-in support
    "theme": "Soda SolarizedDark.sublime-theme",
    "soda_classic_tabs": true,
    "soda_folder_icons": true,
    // Place the "schemes" to the “User” directory
    "color_scheme": "Packages/User/Xuan-Solarized-Dark.tmTheme",

    //------------------------------------------------------------------
    // Font
    //------------------------------------------------------------------
    "font_face": "Consolas",
    "font_size": 14,

    //------------------------------------------------------------------
    // Tab
    //------------------------------------------------------------------
    // The number of spaces a tab is considered equal to
    "tab_size": 4,
    // Set to true to insert spaces when tab is pressed
    "translate_tabs_to_spaces": true,
    // If translate_tabs_to_spaces is true, use_tab_stops will make tab and
    // backspace insert/delete up to the next tabstop
    "use_tab_stops": true,
    // When enabled, pressing tab will insert the best matching completion.
    // When disabled, tab will only trigger snippets or insert a tab.
    // Shift+tab can be used to insert an explicit tab when tab_completion is
    // enabled.
    "tab_completion": true,
    // By default, shift+tab will only unindent if the selection spans
    // multiple lines. When pressing shift+tab at other times, it'll insert a
    // tab character - this allows tabs to be inserted when tab_completion is
    // enabled. Set this to true to make shift+tab always unindent, instead of
    // inserting tabs.
    "shift_tab_unindent": true,

    //------------------------------------------------------------------
    // Indent
    //------------------------------------------------------------------
    // Set to false to disable detection of tabs vs. spaces on load
    "detect_indentation": true,
    // Calculates indentation automatically when pressing enter
    "auto_indent": true,
    // Makes auto indent a little smarter, e.g., by indenting the next line
    // after an if statement in C. Requires auto_indent to be enabled.
    "smart_indent": true,
    // Adds whitespace up to the first open bracket when indenting. Requires
    // auto_indent to be enabled.
    "indent_to_bracket": false,

    //------------------------------------------------------------------
    // Line Column Wrap
    //------------------------------------------------------------------
    // If enabled, will highlight any line with a caret
    "highlight_line": true,
    // Columns in which to display vertical rulers
    "rulers": [72],
    // Set to false to disable scrolling past the end of the buffer.
    // On OS X, this value is overridden in the platform specific settings, so
    // you'll need to place this line in your user settings to override it.
    "scroll_past_end": false,
    // Disables horizontal scrolling if enabled.
    // May be set to true, false, or "auto", where it will be disabled for
    // source code, and otherwise enabled.
    "word_wrap"      : true,
    // Set to a value other than 0 to force wrapping at that column rather than the
    // window width
    "wrap_width"     : 0,
    // Determines what character(s) are used to terminate each line in new files.
    // Valid values are 'system' (whatever the OS uses), 'windows' (CRLF) and
    // 'unix' (LF only).
    "default_line_ending": "unix",
    // Display line endings in the status bar
    "show_line_endings": true,

    //------------------------------------------------------------------
    // Misc
    //------------------------------------------------------------------
    // The encoding to use when the encoding can't be determined automatically.
    // ASCII, UTF-8 and UTF-16 encodings will be automatically detected.
    "fallback_encoding": "Western (Windows 1252)",
    // Encoding used when saving new files, and files opened with an undefined
    // encoding (e.g., plain ascii files). If a file is opened with a specific
    // encoding (either detected or given explicitly), this setting will be
    // ignored, and the file will be saved with the encoding it was opened
    // with.
    "default_encoding": "UTF-8",
    // Files containing null bytes are opened as hexadecimal by default
    "enable_hexadecimal_encoding": true,
    // Display file encoding in the status bar
    "show_encoding": true,
    // Trims white space added by auto_indent when moving the caret off the
    // line.
    "trim_automatic_white_space": true,
    // Set to true to removing trailing white space on save
    "trim_trailing_white_space_on_save": true,
    // Set to true to ensure the last line of the file ends in a newline
    // character when saving
    "ensure_newline_at_eof_on_save": false,
    // Makes tabs with modified files more visible
    "highlight_modified_tabs": true,
    // Set to false to disable underlining the brackets surrounding the caret
    "match_brackets": false,
    // Set to false if you'd rather only highlight the brackets when the caret is
    // next to one
    "match_brackets_content": true,
    // Characters that are considered to separate words
    "word_separators": "./\\()\"'-:,.;<>~!@#$%^&*|+=[]{}`~?，。：；‘’“”、？！￥…（）—《》「」『』【】",
    // Additional situations to trigger auto complete
    "auto_complete_triggers":
    [
        {
            "characters": " ",
            "selector": "text.html"
        }
    ],
    // folder_exclude_patterns and file_exclude_patterns control which files
    // are listed in folders on the side bar. These can also be set on a per-
    // project basis.
    "folder_exclude_patterns": [".svn", ".git", ".hg", "CVS"],
    "file_exclude_patterns": ["*.pyc", "*.pyo", "*.exe", "*.dll", "*.obj","*.o", "*.a", "*.lib", "*.so", "*.dylib", "*.ncb", "*.sdf", "*.suo", "*.pdb", "*.idb", ".DS_Store", "*.class", "*.psd", "*.db", "*.sublime-workspace"],
    // These files will still show up in the side bar, but won't be included in
    // Goto Anything or Find in Files
    "binary_file_patterns": ["*.jpg", "*.jpeg", "*.png", "*.gif", "*.ttf", "*.tga", "*.dds", "*.ico", "*.eot", "*.pdf", "*.swf", "*.jar", "*.zip"],
    // index_exclude_patterns indicate which files won't be indexed.
    "index_exclude_patterns": ["*.log"],
    // List any packages to ignore here. When removing entries from this list,
    // a restart may be required if the package contains plugins.
    "ignored_packages":
    [
        "Vintage"
    ],

    //------------------------------------------------------------------
    // Vintage
    //------------------------------------------------------------------
    // d (delete), y (copy), c (change),
    // gu (lower case), gU (upper case), g~ (swap case),
    // g? (rot13), < (unindent), and > (indent).
    // Vintage 包括基本的动作:
    // l, h, j, k, W, w, e, E, b, B,
    // alt+w (move by sub-words), alt+W (move backwards by sub-words),
    // $, ^, %, 0, G, gg, f, F, t, T, ^f, ^b, H, M, and L.
    // 支持文本对象，包括单词、引号、括号和标签。
    // 支持 ('.') 重复命令, 支持指定数量的命令和动作。支持寄存器、宏和书签。
    // 支持其他杂项命令和 *, /, n, N, s, S 等……
    //------------------------------------------------------------------
    // Enables/disables standard Vi key bindings including the Ctrl modifier
    // that may override some platform-specific conventions.
    // On OS X, this value is overridden in the platform specific settings, so
    // you'll need to place this line in your user settings to override it.
    // Ctrl+[: Escape
    // Ctrl+R: Redo
    // Ctrl+Y: Scroll down one line
    // Ctrl+E: Scroll up one line
    // Ctrl+F: Page Down
    // Ctrl+B: Page Up
    "vintage_ctrl_keys": false,
    // Always propagate copied text to the system clipboard.
    "vintage_use_clipboard": false,
    // Whether to enter command mode when opening a file.
    "vintage_start_in_command_mode": false

}
